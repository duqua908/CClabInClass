housing <- read.csv("F:/MyFiles/External HD files/Academic Work/DUE-work/Thesis Semester1/R'/housing.csv", stringsAsFactors=FALSE)
View(housing)
#########    Section 2  #########
hist(housing$Market.Value.per.SqFt)
## At first look this distribution looks like a left skewed distribution
## add some more breaks to see the distribution better
hist(housing$Market.Value.per.SqFt, breaks=20)
## With the added breaks the distribution looks like a left skewed bimodal distribution the two tiered distribution probably represents a 2 different processes or environment for producing and pricing housing.
######### Section 3 Kernal Density plot ########
d<-density(housing$Market.Value.per.SqFt)
plot(d)
polygon(d, col="red", border="blue")
## Or using ggplot2
density<-ggplot(housing, aes(Market.Value.per.SqFt))
density + geom_density()
myGraph<-density + geom_density()
## add the Borough dimension
boroDensity<-ggplot(housing, aes(Market.Value.per.SqFt, fill=housing$Boro))+geom_density(alpha = 0.2)+xlab("Market Value per Square Foot")+
+ ylab("Density")+guides(fill=guide_legend(title="Borough"))+labs(title="Market Value per SqFt by Borough")
plot(boroDensity)
##This graph reveals the bimodal distribution more, The borough dimension reveals that the Manhattan distribution is significantly more expensive than the others and thus creates the second hump.
###########   Section 4 . ########
## Start by creating a subset eliminating the unwanted values
housingSubset<-subset(housing, Total.Units <= 1000 )
## Graph the data: since there is no graph type specified I will use points because it seems to the most appropriate
## I will add a smooth curve as described in Chap 4 of Fields book. I will help make the data more legible.
GrossByMVpFS<-ggplot(housingSubset, aes(Market.Value.per.SqFt, Gross.SqFt))+geom_point()+geom_smooth()+labs(x="Market Value per SqFt", y="Gross SqFt", title="Gross SqFt by Market Value per SqFt")
plot(GrossByMVpFS)
library("ggplot2", lib.loc="F:/Programs/R-3.1.1/library")
detach("package:ggplot2", unload=TRUE)
library(ggplot2)
density<-ggplot(housing, aes(Market.Value.per.SqFt))
density + geom_density()
myGraph<-density + geom_density()
## add the Borough dimension
boroDensity<-ggplot(housing, aes(Market.Value.per.SqFt, fill=housing$Boro))+geom_density(alpha = 0.2)+xlab("Market Value per Square Foot")+
boroDensity<-ggplot(housing, aes(Market.Value.per.SqFt, fill=housing$Boro))+geom_density(alpha = 0.2)+xlab("Market Value per Square Foot")+
+ ylab("Density")+guides(fill=guide_legend(title="Borough"))+labs(title="Market Value per SqFt by Borough")
boroDensity<-ggplot(housing, aes(Market.Value.per.SqFt, fill=housing$Boro))+geom_density(alpha = 0.2)+xlab("Market Value per Square Foot")+ ylab("Density")+guides(fill=guide_legend(title="Borough"))+labs(title="Market Value per SqFt by Borough")
plot(boroDensity)
##This graph reveals the bimodal distribution more, The borough dimension reveals that the Manhattan distribution is significantly more expensive than the others and thus creates the second hump.
###########   Section 4 . ########
## Start by creating a subset eliminating the unwanted values
housingSubset<-subset(housing, Total.Units <= 1000 )
## Graph the data: since there is no graph type specified I will use points because it seems to the most appropriate
## I will add a smooth curve as described in Chap 4 of Fields book. I will help make the data more legible.
GrossByMVpFS<-ggplot(housingSubset, aes(Market.Value.per.SqFt, Gross.SqFt))+geom_point()+geom_smooth()+labs(x="Market Value per SqFt", y="Gross SqFt", title="Gross SqFt by Market Value per SqFt")
plot(GrossByMVpFS)
##########   Section 1    #############
## loading the data from my hard drive. The path would need to be changed
housing <- read.csv("F:/MyFiles/External HD files/Academic Work/DUE-work/Thesis Semester1/R'/housing.csv", stringsAsFactors=FALSE)
View(housing)
#########    Section 2  #########
hist(housing$Market.Value.per.SqFt)
## At first look this distribution looks like a left skewed distribution
## add some more breaks to see the distribution better
hist(housing$Market.Value.per.SqFt, breaks=20)
## With the added breaks the distribution looks like a left skewed bimodal distribution the two tiered distribution probably represents a 2 different processes or environment for producing and pricing housing.
######### Section 3 Kernal Density plot ########
d<-density(housing$Market.Value.per.SqFt)
plot(d)
polygon(d, col="red", border="blue")
## Or using ggplot2
library(ggplot2)
density<-ggplot(housing, aes(Market.Value.per.SqFt))
density + geom_density()
myGraph<-density + geom_density()
## add the Borough dimension
boroDensity<-ggplot(housing, aes(Market.Value.per.SqFt, fill=housing$Boro))+geom_density(alpha = 0.2)+xlab("Market Value per Square Foot")+ ylab("Density")+guides(fill=guide_legend(title="Borough"))+labs(title="Market Value per SqFt by Borough")
plot(boroDensity)
##This graph reveals the bimodal distribution more, The borough dimension reveals that the Manhattan distribution is significantly more expensive than the others and thus creates the second hump.
###########   Section 4 . ########
## Start by creating a subset eliminating the unwanted values
housingSubset<-subset(housing, Total.Units <= 1000 )
## Graph the data: since there is no graph type specified I will use points because it seems to the most appropriate
## I will add a smooth curve as described in Chap 4 of Fields book. I will help make the data more legible.
GrossByMVpFS<-ggplot(housingSubset, aes(Market.Value.per.SqFt, Gross.SqFt))+geom_point()+geom_smooth()+labs(x="Market Value per SqFt", y="Gross SqFt", title="Gross SqFt by Market Value per SqFt")
plot(GrossByMVpFS)
samp2<- sample(housing$Market.Value.per.SqFt, 50)
samp2DataFrame<-data.frame(samp2)
samp2Density<-ggplot(samp1DataFrame, aes(samp2)) + geom_density()
plot(samp2Density)
library(ggplot2)
samp2Density<-ggplot(samp1DataFrame, aes(samp2)) + geom_density()
samp2Density<-ggplot(samp2DataFrame, aes(samp2)) + geom_density()
plot(samp2Density)
#### Section 2 ####
## Load data
housing <- read.csv("F:/MyFiles/External HD files/Academic Work/DUE-work/Thesis Semester1/R'/housing.csv", stringsAsFactors=FALSE)
View(housing)
#### Section 3 ####
## Anne Duquennois
## Assignment 3
#### Section 2 ####
## Load data
housing <- read.csv("F:/MyFiles/External HD files/Academic Work/DUE-work/Thesis Semester1/R'/housing.csv", stringsAsFactors=FALSE)
View(housing)
#### Section 3 ####
## Create  a sample from this data
samp1<- sample(housing$Market.Value.per.SqFt, 50)
## I will create a density graph to compare these 2 distributions
## first convert the sample data into a data frame
samp1DataFrame<-data.frame(samp1)
samp1Density<-ggplot(samp1DataFrame, aes(samp1)) + geom_density()
## do the same for the entire data set to compare the two visuals
housingDensity<-ggplot(housing, aes(Market.Value.per.SqFt)) + geom_density()
plot(housingDensity)
## The two graphs appear to have a similar bimodal distribution but the sample graph has a much smoother distribution.
## The verticies and the intercept values are different in the graph and the range in the sample is much smaller.
## The sample distribution is less complex relative to the complete data set (obviously) in other words there is much less variance in the data.
#### section 5 ####
samp2<- sample(housing$Market.Value.per.SqFt, 50)
samp2DataFrame<-data.frame(samp2)
plot(samp1Density)
housingDensity<-ggplot(housing, aes(Market.Value.per.SqFt)) + geom_density()
plot(housingDensity)
## The two graphs appear to have a similar bimodal distribution but the sample graph has a much smoother distribution.
## The verticies and the intercept values are different in the graph and the range in the sample is much smaller.
## The sample distribution is less complex relative to the complete data set (obviously) in other words there is much less variance in the data.
#### section 5 ####
samp2<- sample(housing$Market.Value.per.SqFt, 50)
samp2DataFrame<-data.frame(samp2)
samp2Density<-ggplot(samp2DataFrame, aes(samp2)) + geom_density()
plot(samp2Density)
mean(samp1)
mean(samp2)
mean(housing)
mean(housing$Market.Value.per.SqFt)
se1<- sd(samp1)/sqrt(50)
lower<-samp1 - 1.96 * se
lower<-samp1 - 1.96 * se1
upper<-samp1 + 1.96 * se1
View(lower)
mean(lower)
mean(upper)
samp_mean <- rep(NA, 5000)
samp_sd <- rep(NA, 5000)
n <- 50
for (i in 1:5000) {
samp <- sample(houses$Market.Value.per.SqFt, n) # obtain a sample of size n = 50 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
samp_mean <- rep(NA, 5000)
samp_sd <- rep(NA, 5000)
n <- 50
for (i in 1:5000) {
samp <- sample(housing$Market.Value.per.SqFt, n) # obtain a sample of size n = 50 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
samp_meanDF<-data.frame(samp_mean)
samp_meanDensity<-ggplot(samp_meanDensity, aes(samp_mean))
samp_meanDensity<-ggplot(samp_meanDF, aes(samp_mean))
samp_meanDensity<-ggplot(samp_meanDF, aes(samp_mean))+geom_density()
plot(samp_meanDensity)
samp_sdDF<-data.frame(samp_sd)
samp_sdDensity<-ggplot(samp_sdDF, aes(samp_sd))+geom_density()
plot(samp_sdDensity)
mean(samp_mean)
mean(samp_sd)
plot(samp_meanDensity)
mean(samp_mean)
lower <- samp_mean - 1.96 * samp_sd/sqrt(n)
upper <- samp_mean + 1.96 * samp_sd/sqrt(n)
c(lower[1], upper[1])
covers <- lower <= mean(houses$Market.Value.per.SqFt) & upper >= mean(houses$Market.Value.per.SqFt)
sum(covers)/length(covers)
covers <- lower <= mean(housing$Market.Value.per.SqFt) & upper >= mean(housing$Market.Value.per.SqFt)
sum(covers)/length(covers)
install.packages("arm")
library(arm)
library(foreign)
license()
library(foreign)
read.dta(kidiq.dta)
kidiq<- read.dta("F:\MyFiles\External HD files\Academic Work\DUE-work\Thesis Semester1\R'\Homework\kidiq.dta")
kidiq<- read.dta("F:/MyFiles/External HD files/Academic Work/DUE-work/Thesis Semester1/R'/Homework/kidiq.dta")
View(kidiq)
head(kidiq)
lmFit1kidiq = lm(kidiq ~ 1)
lmFit1kidiq = lm(kidiq$kid_score ~ 1)
summary(lmFit1kidiq)
display(lmFit1kidiq)
Display(lmFit1kidiq)
lmFit1kidiq<- lm(kid_score ~ 1, data=kidiq)
display(lmFit1kidiq)
library(arm)
display(lmFit1kidiq)
lmKidiqMomiq<-(kid_score ~ mom_iq, data=kidiq)
lmKidiqMomiq<-(kid_score ~ mom_iq , data=kidiq)
lmKidiqMomiq<-lm(kid_score ~ mom_iq , data=kidiq)
display(lmKidiqMomiq)
library(ggplot2)
KidiqMomiq<-ggplot(kidiq, aes(kid_score, mom_iq))+geom_point()+geom_smooth()+labs(x="kid IQ", y="Mom IQ")
plot(KidiqMomiq)
KidiqMomiq<-ggplot(kidiq, aes(mom_iq, kid_score))+geom_point()+geom_smooth()+labs(x="Mom IQ", y="Kid IQ")
plot(KidiqMomiq)
display(lmFit1kidiq)
mean(kidiq$kid_score)
lmKidiqMomHS<-lm(kid_score ~ mom_hs , data=kidiq)
display(lmKidiqMomHS)
ggplot(kidiq, aes(x=mom_hs, y=kid_score))+geom_point()+geom_smooth(method="lm")
lmKidiqMomIQHS<-lm(kid_score ~ mom_iq + mom_hs , data=kidiq)
display(lmKidiqMomIQHS)
lmKidiqMomIQHS<-lm(kid_score ~ mom_hs + mom_iq , data=kidiq)
display(lmKidiqMomIQHS)
